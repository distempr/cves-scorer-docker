#!/usr/bin/env python

import sqlite3
import time

import stanza
from tqdm import tqdm


conn = sqlite3.connect('/var/lib/cves/data/cves.db')
cursor = conn.cursor()
update_cursor = conn.cursor()
freq_cursor = conn.cursor()

nlp = stanza.Pipeline(lang='es')


def get_rank(word):
    word = freq_cursor.execute(
       'SELECT rank, frequency FROM frequency WHERE word = ?',
       (word,)
    ).fetchone()
    return word


def score_nlp_sentence(sentence):
    score = 0
    for word in sentence.words:
        if word.upos not in ['ADV', 'ADJ', 'NOUN', 'VERB']:
            continue

        rank = get_rank(word.lemma)
        if rank:
            rank, freq = rank
            score += rank
        else:
            return None

    return score


total = cursor.execute('SELECT COUNT(DISTINCT hash) FROM sentence WHERE score is NULL AND selected = 1').fetchone()[0]
print(f':: Sleeping for 5 seconds and then processing {total} sentences')
time.sleep(5)

sentences = cursor.execute('SELECT DISTINCT hash, content FROM sentence WHERE score IS NULL AND selected = 1')
with tqdm(total=total) as pbar:
    for sentence in sentences: 
        hash_, content = sentence
    
        doc = nlp(content)
        score = 0
        for stanza_sentence in doc.sentences:
            nlp_sentence_score = score_nlp_sentence(stanza_sentence)
            if nlp_sentence_score is not None:
                score += nlp_sentence_score
            else:
                score = 0
                break
    
        update_cursor.execute('UPDATE sentence SET score = ? WHERE hash = ?', (score, hash_))
        conn.commit()
        pbar.update(1)
